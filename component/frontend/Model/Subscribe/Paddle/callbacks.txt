Notes on callbacks I need to create

First, I need to add payment_method to #__akeebasubs_subscriptions
	ENUM('apple-pay', 'card', 'free', 'paypal', 'wire-transfer', 'unknown') DEFAULT 'unknown'

Render it in the backend and sort by it.


payment_succeeded -- Update subscription record
================================================================================
passthrough -- subscription ID
balance_gross -- gross amount
balance_tax -- tax amount
country
order_id -- payment_key
payment_method		[apple-pay, card, free, paypal, wire-transfer] --> field by the same name
product_id
receipt_url --> field by the same name

Check that product_id matches the level's product or subscription ID.

Update the akeebasubs.contry user profile value with 'country'

Calculate some pricing information and add it to $updates
    gross_amount = balance_gross
    tax_amount = balance_tax
    net_amount = gross_amount - tax_amount
    tax_percent =  tax_amount / net_amount
    discount_amount = prediscount_amount - net_amount

Replicate the logic from the former PayPal plugin sans recurring subscription logic of course.

Fulfillment -- Echo success message
================================================================================
passthrough -- subscription ID
p_order_id -- double check with record's payment_key
p_product_id -- double check with level's product ID OR subscription plan ID

Output the plan's success message.

payment_refunded -- Update subscription record
================================================================================
passthrough -- subscription ID
balance_gross_refund
balance_tax_refund
order_id -- payment_key
refund_type -- full, vat, partial (only cancel subscription on "full")

Actions depend on refund_type:

vat refund: zero out the tax rate and tax amount, add a note
partial refund: reduce the gross and tax amount, record net difference as discount, recalculate effective tax rate, add a note
full refund: cancel the subscription (status X) and set enabled to 0, add a note

high_risk_transaction_created -- Update subscription record
================================================================================
passthrough -- subscription ID
case_id
risk_score
status	-- MUST be 'pending'

Set the payment status to 'P' (Pending).
Create a note "Transaction flagged as high risk on [DATE_TZ]. Case ID [CASE_ID], risk score [RISK_SCORE]%\n"

high_risk_transaction_updated -- Update subscription record
================================================================================
passthrough -- subscription ID
case_id
risk_score
status -- accepted OR rejected

IF status == 'accepted'
	Set payment status to 'C'
	Add note "High risk transaction cleared on [DATE_TZ]. Case ID [CASE_ID], risk score [RISK_SCORE]%\n"

IF status == 'rejected'
	Set payment status to 'X'
	Add note "High risk transaction rejected on [DATE_TZ]. Case ID [CASE_ID], risk score [RISK_SCORE]%\n"

payment_dispute_created -- Update subscription record
================================================================================
passthrough -- subscription ID
status -- MUST be 'open'

Set payment_status to 'P' (Pending).
Create a note "Payment dispute opened on [DATE_TZ]. Subscription deactivated temporarily.%\n"

payment_dispute_closed -- Update subscription record
================================================================================
passthrough -- subscription ID
status -- MUST be 'closed'

If the payment_state is X or N do nothing; return.
If the payment_state is P or C set it to X and set enabled to 0.

